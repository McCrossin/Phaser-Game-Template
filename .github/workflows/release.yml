# Release Automation
name: Release
on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Release version (e.g., 1.0.0)'
                required: true
                type: string

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.17.1'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm run test:run

            - name: Build application
              run: npm run build

            - name: Update version
              run: |
                  npm version ${{ github.event.inputs.version }} --no-git-tag-version
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add package.json
                  git commit -m "Release v${{ github.event.inputs.version }}"

            - name: Create release tag
              run: |
                  git tag v${{ github.event.inputs.version }}
                  git push origin v${{ github.event.inputs.version }}

            - name: Generate changelog
              id: changelog
              run: |
                  echo "## What's Changed" > CHANGELOG.md
                  git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md
                  echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
                  cat CHANGELOG.md >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ github.event.inputs.version }}
                  release_name: Release v${{ github.event.inputs.version }}
                  body: ${{ steps.changelog.outputs.CHANGELOG }}
                  draft: false
                  prerelease: false
