name: Game Performance Monitoring

on:
    schedule:
        # Run weekly game performance check on Sundays at 6 AM UTC
        - cron: '0 6 * * 0'
    push:
        branches: [main]
        paths:
            - 'src/**'
            - 'assets/**'
            - 'config/**'
            - '.github/workflows/health-monitoring.yml'
    workflow_dispatch:
        inputs:
            full_performance_scan:
                description: 'Run comprehensive game performance analysis'
                required: false
                default: 'false'
                type: boolean

jobs:
    game-performance-check:
        runs-on: ubuntu-latest
        timeout-minutes: 15

        permissions:
            contents: read
            issues: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.17.1'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci --prefer-offline --no-audit --no-fund

            - name: Build game for performance testing
              run: |
                  echo "Building game for performance analysis..."
                  npm run build
                  echo "Game build completed"

            - name: Run Game Performance Check
              id: game_performance
              run: |
                  echo "Running game performance validation..."
                  npm run performance:check > game-performance-output.txt 2>&1
                  echo "game_performance_exit_code=$?" >> $GITHUB_OUTPUT
              continue-on-error: true

            - name: Analyze Game Bundle
              id: bundle_analysis
              run: |
                  echo "Analyzing game bundle size and assets..."

                  # Bundle size analysis
                  if [ -d "dist" ]; then
                    bundle_size_bytes=$(du -sb dist | cut -f1)
                    bundle_size_mb=$((bundle_size_bytes / 1024 / 1024))
                    echo "bundle_size_mb=$bundle_size_mb" >> $GITHUB_OUTPUT
                    echo "Bundle size: ${bundle_size_mb}MB" > bundle-analysis.txt
                    
                    # Check if bundle exceeds 2MB target
                    if [ $bundle_size_mb -gt 2 ]; then
                      echo "⚠️ Bundle size exceeds 2MB target" >> bundle-analysis.txt
                      echo "bundle_size_warning=true" >> $GITHUB_OUTPUT
                    else
                      echo "✅ Bundle size within 2MB target" >> bundle-analysis.txt
                      echo "bundle_size_warning=false" >> $GITHUB_OUTPUT
                    fi
                    
                    # List largest assets
                    echo "Largest assets:" >> bundle-analysis.txt
                    find dist -type f -exec ls -lh {} + | sort -k5 -hr | head -10 >> bundle-analysis.txt
                  else
                    echo "❌ No dist directory found" >> bundle-analysis.txt
                    echo "bundle_analysis_exit_code=1" >> $GITHUB_OUTPUT
                  fi

            - name: Game Asset Validation
              run: |
                  echo "Validating game assets..."
                  echo "Checking for required game assets:" > asset-validation.txt

                  # Check for essential game files
                  if [ -f "dist/index.html" ]; then
                    echo "✅ index.html found" >> asset-validation.txt
                  else
                    echo "❌ index.html missing" >> asset-validation.txt
                  fi

                  # Check for JavaScript bundle
                  if find dist -name "*.js" -type f | grep -q .; then
                    echo "✅ JavaScript bundle found" >> asset-validation.txt
                  else
                    echo "❌ JavaScript bundle missing" >> asset-validation.txt
                  fi

                  # Check for CSS assets
                  if find dist -name "*.css" -type f | grep -q .; then
                    echo "✅ CSS assets found" >> asset-validation.txt
                  else
                    echo "ℹ️ No CSS assets (may be normal for game)" >> asset-validation.txt
                  fi

                  echo "Asset validation completed"

            - name: Generate Game Performance Report
              run: |
                  echo "# 🎮 Game Performance Report - $(date)" > game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo "## � Game Performance Metrics" >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo '```' >> game-performance-report.md
                  cat game-performance-output.txt >> game-performance-report.md
                  echo '```' >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo "## 📦 Bundle Analysis" >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo '```' >> game-performance-report.md
                  cat bundle-analysis.txt >> game-performance-report.md
                  echo '```' >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo "## 🎨 Asset Validation" >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo '```' >> game-performance-report.md
                  cat asset-validation.txt >> game-performance-report.md
                  echo '```' >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo "## � Performance Summary" >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo "- **Performance Check**: $(if [ "${{ steps.game_performance.outputs.game_performance_exit_code }}" = "0" ]; then echo "✅ Passed"; else echo "❌ Failed"; fi)" >> game-performance-report.md
                  echo "- **Bundle Size**: $(if [ "${{ steps.bundle_analysis.outputs.bundle_size_warning }}" = "false" ]; then echo "✅ Within Target"; else echo "⚠️ Exceeds 2MB Target"; fi)" >> game-performance-report.md
                  echo "- **Bundle Size**: ${{ steps.bundle_analysis.outputs.bundle_size_mb }}MB" >> game-performance-report.md
                  echo "- **Report Generated**: $(date -u)" >> game-performance-report.md
                  echo "- **Target FPS**: 60 FPS" >> game-performance-report.md
                  echo "- **Max Bundle Size**: 2MB" >> game-performance-report.md
                  echo "- **Max Load Time**: 3 seconds" >> game-performance-report.md
                  echo "" >> game-performance-report.md
                  echo "---" >> game-performance-report.md
                  echo "*This report was automatically generated by Game Performance Monitoring*" >> game-performance-report.md

            - name: Upload Game Performance Report
              uses: actions/upload-artifact@v4
              with:
                  name: game-performance-report-${{ github.run_number }}
                  path: |
                      game-performance-report.md
                      game-performance-output.txt
                      bundle-analysis.txt
                      asset-validation.txt
                  retention-days: 30

            - name: Check Game Performance Status
              run: |
                  performance_exit_code="${{ steps.game_performance.outputs.game_performance_exit_code }}"
                  bundle_warning="${{ steps.bundle_analysis.outputs.bundle_size_warning }}"

                  echo "Game performance check exit code: $performance_exit_code"
                  echo "Bundle size warning: $bundle_warning"

                  if [ "$performance_exit_code" != "0" ] || [ "$bundle_warning" = "true" ]; then
                    echo "⚠️ Game performance monitoring detected issues!"
                    echo "Review the game performance report artifact for details."
                    echo "Consider optimizing assets or game logic to meet performance targets."
                  else
                    echo "✅ All game performance checks passed!"
                    echo "Game meets 60 FPS target and 2MB bundle size limit."
                  fi

    comprehensive-game-analysis:
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.full_performance_scan == 'true'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.17.1'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci --prefer-offline --no-audit --no-fund

            - name: Comprehensive Game Performance Analysis
              run: |
                  echo "# 🎯 Comprehensive Game Performance Analysis" > comprehensive-game-analysis.md
                  echo "" >> comprehensive-game-analysis.md
                  echo "Generated on: $(date -u)" >> comprehensive-game-analysis.md
                  echo "Environment: GitHub Actions CI" >> comprehensive-game-analysis.md
                  echo "Node.js version: $(node --version)" >> comprehensive-game-analysis.md
                  echo "" >> comprehensive-game-analysis.md

                  # Build performance
                  echo "## 🔨 Build Performance" >> comprehensive-game-analysis.md
                  echo "" >> comprehensive-game-analysis.md
                  build_start=$(date +%s%N)
                  npm run build >/dev/null 2>&1
                  build_end=$(date +%s%N)
                  build_time_ms=$(( (build_end - build_start) / 1000000 ))
                  build_time_s=$(( build_time_ms / 1000 ))
                  echo "- Build time: ${build_time_s}s (${build_time_ms}ms)" >> comprehensive-game-analysis.md
                  echo "- Target: < 5 minutes (300s)" >> comprehensive-game-analysis.md

                  if [ $build_time_s -lt 300 ]; then
                    echo "- Status: ✅ Within target" >> comprehensive-game-analysis.md
                  else
                    echo "- Status: ⚠️ Exceeds target" >> comprehensive-game-analysis.md
                  fi

                  # Bundle analysis
                  if [ -d "dist" ]; then
                    bundle_size_kb=$(du -sk dist | cut -f1)
                    bundle_size_mb=$((bundle_size_kb / 1024))
                    echo "" >> comprehensive-game-analysis.md
                    echo "## 📦 Bundle Analysis" >> comprehensive-game-analysis.md
                    echo "" >> comprehensive-game-analysis.md
                    echo "- Bundle size: ${bundle_size_mb}MB (${bundle_size_kb}KB)" >> comprehensive-game-analysis.md
                    echo "- Target: < 2MB" >> comprehensive-game-analysis.md
                    
                    if [ $bundle_size_mb -lt 2 ]; then
                      echo "- Status: ✅ Within target" >> comprehensive-game-analysis.md
                    else
                      echo "- Status: ⚠️ Exceeds target" >> comprehensive-game-analysis.md
                    fi
                    
                    echo "- File breakdown:" >> comprehensive-game-analysis.md
                    find dist -type f -exec ls -lh {} + | sort -k5 -hr | head -5 | while read line; do
                      echo "  - $line" >> comprehensive-game-analysis.md
                    done
                  fi

                  echo "" >> comprehensive-game-analysis.md
                  echo "## 🧪 Test Performance" >> comprehensive-game-analysis.md
                  echo "" >> comprehensive-game-analysis.md

                  # Test execution time
                  test_start=$(date +%s%N)
                  npm test >/dev/null 2>&1 || true
                  test_end=$(date +%s%N)
                  test_time_ms=$(( (test_end - test_start) / 1000000 ))
                  test_time_s=$(( test_time_ms / 1000 ))
                  echo "- Test execution time: ${test_time_s}s (${test_time_ms}ms)" >> comprehensive-game-analysis.md
                  echo "- Target: < 3 minutes (180s)" >> comprehensive-game-analysis.md

                  if [ $test_time_s -lt 180 ]; then
                    echo "- Status: ✅ Within target" >> comprehensive-game-analysis.md
                  else
                    echo "- Status: ⚠️ Exceeds target" >> comprehensive-game-analysis.md
                  fi

                  echo "" >> comprehensive-game-analysis.md
                  echo "## 🎮 Game-Specific Metrics" >> comprehensive-game-analysis.md
                  echo "" >> comprehensive-game-analysis.md
                  echo "- Target FPS: 60 FPS" >> comprehensive-game-analysis.md
                  echo "- Target Load Time: < 3 seconds" >> comprehensive-game-analysis.md
                  echo "- Asset Processing: Optimized for game performance" >> comprehensive-game-analysis.md
                  echo "- Platform Support: Web (Desktop & Mobile)" >> comprehensive-game-analysis.md

                  echo "" >> comprehensive-game-analysis.md
                  echo "---" >> comprehensive-game-analysis.md
                  echo "*Comprehensive analysis for game development performance tracking*" >> comprehensive-game-analysis.md

            - name: Upload comprehensive analysis
              uses: actions/upload-artifact@v4
              with:
                  name: comprehensive-game-analysis-${{ github.run_number }}
                  path: comprehensive-game-analysis.md
                  retention-days: 90
