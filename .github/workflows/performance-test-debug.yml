# Debug workflow to test performance testing in CI
name: Performance Test Debug

on:
    workflow_dispatch: # Manual trigger for debugging

jobs:
    debug-performance:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.17.1'
                  cache: 'npm'

            - name: Cache Playwright browsers
              uses: actions/cache@v4
              with:
                  path: ~/.cache/playwright
                  key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      playwright-${{ runner.os }}-

            - name: Install dependencies
              run: npm ci

            - name: Install Playwright browsers
              run: |
                  # Install playwright with proper permissions and caching
                  export PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/playwright
                  npx playwright install --with-deps chromium
              env:
                  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: false

            - name: Debug environment
              run: |
                  echo "Current directory: $(pwd)"
                  echo "Node version: $(node --version)"
                  echo "NPM version: $(npm --version)"
                  echo "CI environment: $CI"
                  echo "GitHub Actions: $GITHUB_ACTIONS"
                  echo "Environment detection test:"
                  if [ "$CI" = "true" ] || [ "$GITHUB_ACTIONS" = "true" ]; then
                    echo "  Detected: CI environment"
                  else
                    echo "  Detected: Local environment"
                  fi
                  echo "Performance config:"
                  if [ -f "config/ci-performance-thresholds.json" ]; then
                    echo "  CI thresholds config found"
                    cat config/ci-performance-thresholds.json | head -20
                  else
                    echo "  CI thresholds config NOT found"
                  fi
                  ls -la

            - name: Build application
              run: npm run build

            - name: Check build output
              run: |
                  echo "Build output:"
                  find dist -type f -name "*.html" | head -10
                  ls -la dist/

            - name: Test preview server manually
              run: |
                  echo "Starting preview server..."
                  npm run preview &
                  PREVIEW_PID=$!
                  sleep 10

                  echo "Testing server response..."
                  curl -I http://localhost:4173/ || echo "Server not responding"

                  echo "Killing preview server..."
                  kill $PREVIEW_PID || true

            - name: Run performance tests with debug
              run: |
                  echo "üéÆ Running performance tests with environment-aware thresholds..."
                  echo "Expected behavior:"
                  echo "  - CI environment will use lower FPS thresholds"
                  echo "  - Focus on regression detection rather than absolute performance"
                  echo "  - Warnings expected for CI hardware limitations"

                  export DEBUG=pw:webserver
                  npm run test:performance || {
                    echo "‚ö†Ô∏è Performance test failures expected in CI - analyzing results..."
                    
                    if [ -f "performance-results.json" ]; then
                      echo "Performance results found:"
                      cat performance-results.json
                    else
                      echo "‚ùå No performance results generated"
                    fi
                    
                    # Don't fail the debug workflow
                    exit 0
                  }

                  echo "‚úÖ Performance tests completed successfully"
              env:
                  CI: true
                  GITHUB_ACTIONS: true
