name: Deployment Gate

on:
    push:
        branches: [main]
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment to deploy to'
                required: true
                default: 'staging'
                type: choice
                options:
                    - staging
                    - production

env:
    NODE_VERSION: '22'
    CACHE_VERSION: 'v1'

jobs:
    deploy-staging:
        name: Deploy to Staging
        runs-on: ubuntu-latest
        timeout-minutes: 10
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      node_modules
                      dist
                  key: ${{ runner.os }}-deploy-${{ env.NODE_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-deploy-${{ env.NODE_VERSION }}-${{ env.CACHE_VERSION }}-

            - name: Install dependencies
              run: npm ci --prefer-offline --no-audit

            - name: Build for staging
              run: npm run build

            - name: Generate build info
              run: npm run build:info

            - name: Deploy to staging
              run: npm run deploy:staging
              env:
                  DEPLOY_ENV: staging

    deploy-production:
        name: Deploy to Production
        runs-on: ubuntu-latest
        timeout-minutes: 10
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      node_modules
                      dist
                  key: ${{ runner.os }}-deploy-${{ env.NODE_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-deploy-${{ env.NODE_VERSION }}-${{ env.CACHE_VERSION }}-

            - name: Install dependencies
              run: npm ci --prefer-offline --no-audit

            - name: Build for production
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Generate build info
              run: npm run build:info

            - name: Deploy to production
              run: npm run deploy:production
              env:
                  DEPLOY_ENV: production
