# Security Scanning Pipeline
name: Security Scan
on:
    pull_request:
        branches: [main, develop]
    push:
        branches: [main, develop]
    schedule:
        - cron: '0 4 * * 1' # Weekly on Monday at 4 AM

jobs:
    codeql:
        name: CodeQL Analysis
        runs-on: ubuntu-latest
        timeout-minutes: 10
        permissions:
            actions: read
            contents: read
            security-events: write

        strategy:
            fail-fast: false
            matrix:
                language: ['javascript', 'typescript']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                  languages: ${{ matrix.language }}
                  queries: security-extended,security-and-quality
                  config: |
                      name: "Game Security Config"
                      queries:
                        - uses: security-extended
                        - uses: security-and-quality
                      paths-ignore:
                        - node_modules
                        - coverage
                        - dist

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build for analysis
              run: npm run build

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
              with:
                  category: '/language:${{matrix.language}}'

    secret-scanning:
        name: Secret Detection
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Run secret detection
              uses: gitleaks/gitleaks-action@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    container-security:
        name: Container Security Scan
        runs-on: ubuntu-latest
        if: github.event_name != 'schedule'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build Docker image for security scan
              run: |
                  docker build -t security-scan:latest .

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: 'security-scan:latest'
                  format: 'sarif'
                  output: 'trivy-results.sarif'
                  severity: 'CRITICAL,HIGH,MEDIUM'
                  ignore-unfixed: false

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v3
              if: always()
              with:
                  sarif_file: 'trivy-results.sarif'

    dependency-check:
        name: Dependency Security Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run npm audit
              run: npm audit --audit-level moderate

            - name: Check for known vulnerabilities in game dependencies
              run: |
                  echo "Checking Phaser.js and game-specific dependencies..."
                  npx better-npm-audit audit --level moderate
