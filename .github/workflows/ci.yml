# Game CI Pipeline 2025
name: Game CI Pipeline 2025
on:
    pull_request:
        branches: [main, develop]
    push:
        branches: [main, develop]

jobs:
    security-scan:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run security linting
              run: npm run lint

            - name: Check for known vulnerabilities
              run: npm audit --audit-level moderate

    lint-and-typecheck:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run TypeScript check
              run: npm run typecheck

            - name: Run linting
              run: npm run lint

    test:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        strategy:
            matrix:
                node-version: [22]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm run test:run
              timeout-minutes: 5

            - name: Upload coverage artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: coverage-${{ matrix.node-version }}
                  path: coverage/

    build-and-push:
        runs-on: ubuntu-latest
        needs: [lint-and-typecheck, test, security-scan]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: dist/

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Generate Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=sha

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    performance-check:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build and check bundle size
              run: |
                  npm run build
                  echo "Build completed successfully"

            - name: Run performance check script
              run: npm run performance:check
