name: Quality Gate

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'README*'
      - 'LICENSE'
      - '.gitignore'
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'README*'
      - 'LICENSE'
      - '.gitignore'

env:
  NODE_VERSION: '22'
  CACHE_VERSION: 'v1'

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    # Skip CI for specific commit messages
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[docs only]')
    
    permissions:
      contents: read
      security-events: write
      checks: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
            dist
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Lint code
        run: npm run lint
      
      - name: Type check
        run: npm run typecheck
      
      - name: Security scan
        run: npm run security:check:local
      
      - name: Unit tests
        run: npm run test:run
      
      - name: Build verification
        run: npm run build
      
      - name: Performance validation (CI optimized)
        run: npm run test:performance
        env:
          CI: true
          PLAYWRIGHT_TIMEOUT_MULTIPLIER: 2
